{"version":3,"sources":["app/hero/hero.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;cASM,MAAM,EASN,aAAa;;;;;;;;;;;YAbnB;gBACI,cAAmB,EAAU,EAAS,IAAY;oBAA/B,OAAE,GAAF,EAAE,CAAQ;oBAAS,SAAI,GAAJ,IAAI,CAAQ;gBAAI,CAAC;gBAC3D,WAAC;YAAD,CAFA,AAEC,IAAA;YAFD,uBAEC,CAAA;YAEK,MAAM,GAAW;gBACnB,IAAI,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC;gBACxB,IAAI,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC;gBACrB,IAAI,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC;gBACxB,IAAI,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC;gBACzB,IAAI,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC;gBACvB,IAAI,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC;aAC5B,CAAC;YAEI,aAAa,GAAG,GAAG,CAAC;YAG1B;gBAEK,qBAAkC,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBADrC,YAAO,GAAG,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;gBACrB,CAAC;gBAClD,+BAAS,GAAT;oBACI,MAAM,CAAC,IAAI,OAAO,CAAS,UAAA,OAAO;wBAC9B,UAAU,CAAC,cAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;oBAC1D,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,6BAAO,GAAP,UAAQ,EAAmB;oBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;yBAClB,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAf,CAAe,CAAC,EAApC,CAAoC,CAAC,CAAC;gBAC9D,CAAC;gBAED,8BAAQ,GAAR,UAAS,GAAW;oBAChB,MAAM,CAAC,IAAI,CAAC,IAAI;yBACX,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;yBACzE,SAAS,EAAE;yBACX,IAAI,EAAE;yBACN,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjC,CAAC;gBACO,iCAAW,GAAnB,UAAoB,KAAU;oBAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBACnC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;gBAClD,CAAC;gBAzBL;oBAAC,iBAAU,EAAE;+BAGK,aAAM,CAAC,WAAI,CAAC;;+BAHjB;gBA2Bb,kBAAC;YAAD,CA1BA,AA0BC,IAAA;YA1BD,qCA0BC,CAAA","file":"hero.service.js","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Headers, Http, Response, RequestOptions, ResponseContentType } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/toPromise';\n\nexport class Hero {\n    constructor(public id: number, public name: string) { }\n}\n\nconst HEROES: Hero[] = [\n    new Hero(11, 'Mr. Nice'),\n    new Hero(12, 'Narco'),\n    new Hero(13, 'Bombasto'),\n    new Hero(14, 'Celeritas'),\n    new Hero(15, 'Magneta'),\n    new Hero(16, 'RubberMan')\n];\n\nconst FETCH_LATENCY = 500;\n\n@Injectable()\nexport class HeroService {\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n     constructor(@Inject(Http) private http: Http) { }\n    getHeroes() {\n        return new Promise<Hero[]>(resolve => {\n            setTimeout(() => { resolve(HEROES); }, FETCH_LATENCY);\n        });\n    }\n\n    getHero(id: number | string) {\n        return this.getHeroes()\n            .then(heroes => heroes.find(hero => hero.id === +id));\n    }\n\n    getFiles(url: string): Promise<any> {\n        return this.http\n            .post(url, JSON.stringify({ name: 'unknown' }), { headers: this.headers })\n            .toPromise()\n            .then()\n            .catch(this.handleError);\n    }\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred'); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n"],"sourceRoot":"src/"}